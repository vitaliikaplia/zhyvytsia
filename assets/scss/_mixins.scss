/* mixins
-------------------------------------------------------------- */

@mixin transition($value...) {
	-moz-transition: $value;
	-o-transition: $value;
	-webkit-transition: $value;
	transition: $value;
}

@mixin transition-delay($delay...) {
	-moz-transition-delay:    $delay;
	-o-transition-delay:      $delay;
	-webkit-transition-delay: $delay;
	transition-delay:         $delay;
}

@mixin animation-delay($value...) {
	-moz-animation-delay: $value;
	-o-animation-delay: $value;
	-webkit-animation-delay: $value;
	animation-delay: $value;
}

@mixin opacity($value) {
	$opacity-ie: $value * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
	-moz-opacity: $value; /* Mozilla 1.6 и ниже */
	-khtml-opacity: $value; /* Konqueror 3.1, Safari 1.1 */
	opacity: $value; /* CSS3 - Mozilla 1.7b +, Firefox 0.9 +, Safari 1.2+, Opera 9+ */
}

@mixin transform($value){
	-moz-transform: $value; /* Для Firefox */
	-ms-transform: $value; /* Для IE */
	-webkit-transform: $value; /* Для Safari, Chrome, iOS */
	-o-transform: $value; /* Для Opera */
	transform: $value;
}

@mixin box-shadow($value){
	-webkit-box-shadow: $value;
	-moz-box-shadow:    $value;
	box-shadow:         $value;
}

@mixin border-radius($value){
	-webkit-border-radius: $value;
	-moz-border-radius: $value;
	border-radius: $value;
}

@mixin linearGradient($left, $right){
	background: $left; /* Old browsers */
	background: -moz-linear-gradient(left,  $left 0%, $right 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left, right, color-stop(0%,$left), color-stop(100%,$right)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(left,  $left 0%,$right 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(left,  $left 0%,$right 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(left,  $left 0%,$right 100%); /* IE10+ */
	background: linear-gradient(to right,  $left 0%,$right 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

@mixin linearTopGradient($top, $bottom){
	background: $top; /* Old browsers */
	background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
	background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

@mixin keyframe($name){
	@-webkit-keyframes #{$name}{
		@content;
	}
	@-moz-keyframes #{$name}{
		@content;
	}
	@-o-keyframes #{$name}{
		@content;
	}
	@keyframes #{$name}{
		@content;
	}
}

@mixin animation ($params...){
	-webkit-animation: $params;
	-moz-animation: $params;
	-o-animation: $params;
	animation: $params;
}

@mixin placeholder() {
	&::-webkit-input-placeholder {@content;}
	&::-moz-placeholder          {@content;}
	&:-moz-placeholder           {@content;}
	&:-ms-input-placeholder      {@content;}
}

@mixin blur($px: 0) {
	-webkit-filter: blur(#{$px}px) !important;
	-ms-filter: blur(#{$px}px) !important;
	-moz-filter: blur(#{$px}px) !important;
	filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'blur\'><feGaussianBlur stdDeviation=\'#{$px}\' /></filter></svg>#blur");
	filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='#{$px}');
}

@mixin transform-origin ($origin...) {
	moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}

// Flexbox display
@mixin showWithAnimation($param) {
	@include transition(all .35s ease-in-out $param);
	@include opacity(0);
	@include transform(translateY(25px));

	&.visible{
		@include opacity(1);
		@include transform(translateY(0px));
	}
}

// Flexbox display
@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
	-webkit-box-flex: $values;
	-moz-box-flex: $values;
	-webkit-flex: $values;
	-ms-flex: $values;
	flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
	-webkit-flex-direction: $direction;
	-moz-flex-direction: $direction;
	-ms-flex-direction: $direction;
	flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
	-webkit-flex-wrap: $wrap;
	-moz-flex-wrap: $wrap;
	-ms-flex-wrap: $wrap;
	flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
	-webkit-flex-flow: $flow;
	-moz-flex-flow: $flow;
	-ms-flex-flow: $flow;
	flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
	-webkit-box-ordinal-group: $val;
	-moz-box-ordinal-group: $val;
	-ms-flex-order: $val;
	-webkit-order: $val;
	order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
	-webkit-flex-grow: $grow;
	-moz-flex-grow: $grow;
	-ms-flex-grow: $grow;
	flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
	-webkit-flex-shrink: $shrink;
	-moz-flex-shrink: $shrink;
	-ms-flex-shrink: $shrink;
	flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
	-webkit-flex-basis: $width;
	-moz-flex-basis: $width;
	-ms-flex-basis: $width;
	flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
	-webkit-justify-content: $justify;
	-moz-justify-content: $justify;
	-ms-justify-content: $justify;
	justify-content: $justify;
	-ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
	-webkit-align-content: $align;
	-moz-align-content: $align;
	-ms-align-content: $align;
	align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
	-webkit-align-items: $align;
	-moz-align-items: $align;
	-ms-align-items: $align;
	-ms-flex-align: $align;
	align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
	-webkit-align-self: $align;
	-moz-align-self: $align;
	-ms-align-self: $align;
	align-self: $align;
}
